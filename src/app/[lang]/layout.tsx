import type { Metadata } from "next";
import { Inter, Roboto } from "next/font/google";
import "./globals.css";
import StoreProvider from "./StoreProvider";
import { ThemeProvider } from "@components/theme/theme-provider";
import { getDictionary } from "@/get-dictionary";
import Nav from "@components/navigation/Nav";
import Footer from "@components/ui/Footer";
import Separator from "@components/ui/Separator";

import { i18n, type Locale } from "@/i18n-config";

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}

const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });
const roboto = Roboto({
  weight: ["400", "700", "900"],
  style: ["normal", "italic"],
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { lang: Locale };
}) {
  const dictionary = await getDictionary(params.lang);
  return (
    <StoreProvider>
      {/* TODO enlever la suppression des warning une fois en prod */}
      <html lang={params.lang} suppressHydrationWarning={true}>
        {/* TODO enlever la suppression des warning une fois en prod */}
        <body
          className={`${roboto.className} ${inter.className}`}
          suppressHydrationWarning={true}
        >
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem
            disableTransitionOnChange
          >
            <div className="pb-16">
              <Nav lang={params.lang} dictionary={dictionary} />
            </div>
            <div className="px-2">{children}</div>
            <Separator color="primary" size="medium" />
            <Footer dictionary={dictionary} />
          </ThemeProvider>
        </body>
      </html>
    </StoreProvider>
  );
}
